From 398935d13c2d784b6db1076c641cd89cfc65a13d Mon Sep 17 00:00:00 2001
From: skachan <password>
Date: Tue, 3 Jan 2017 17:02:02 +0200
Subject: [PATCH] init

---
 pom.xml                                            | 80 +++++++++++++++++++---
 src/main/java/com/courses/WEB-INF/homePage.jsp     | 16 +++++
 src/main/java/com/courses/WEB-INF/loginPage.jsp    | 26 +++++++
 src/main/java/com/courses/WEB-INF/welcomePage.jsp  |  2 +
 src/main/java/com/courses/web/LoginController.java | 46 +++++++++++++
 .../web/security/LoginApplicationConfig.java       | 28 ++++++++
 .../courses/web/security/LoginSecurityConfig.java  | 38 ++++++++++
 .../web/security/SpringMVCWebAppInitializer.java   | 25 +++++++
 .../web/security/SpringSecurityInitializer.java    |  9 +++
 src/main/resources/WEB-INF/homePage.jsp            | 16 +++++
 src/main/resources/WEB-INF/loginPage.jsp           | 26 +++++++
 src/main/resources/WEB-INF/welcomePage.jsp         |  2 +
 src/main/resources/spring-security.xml             | 30 ++++++++
 13 files changed, 335 insertions(+), 9 deletions(-)
 create mode 100644 src/main/java/com/courses/WEB-INF/homePage.jsp
 create mode 100644 src/main/java/com/courses/WEB-INF/loginPage.jsp
 create mode 100644 src/main/java/com/courses/WEB-INF/welcomePage.jsp
 create mode 100644 src/main/java/com/courses/web/LoginController.java
 create mode 100644 src/main/java/com/courses/web/security/LoginApplicationConfig.java
 create mode 100644 src/main/java/com/courses/web/security/LoginSecurityConfig.java
 create mode 100644 src/main/java/com/courses/web/security/SpringMVCWebAppInitializer.java
 create mode 100644 src/main/java/com/courses/web/security/SpringSecurityInitializer.java
 create mode 100644 src/main/resources/WEB-INF/homePage.jsp
 create mode 100644 src/main/resources/WEB-INF/loginPage.jsp
 create mode 100644 src/main/resources/WEB-INF/welcomePage.jsp
 create mode 100644 src/main/resources/spring-security.xml

diff --git a/pom.xml b/pom.xml
index ccb4507..b7b75fe 100644
--- a/pom.xml
+++ b/pom.xml
@@ -3,10 +3,10 @@
 	<modelVersion>4.0.0</modelVersion>
 	<groupId>org.springframework.samples</groupId>
 	<artifactId>cars-rent</artifactId>
-	<version>0.0.1-SNAPSHOT</version>
+	<version>1</version>
+	<packaging>war</packaging>
 
 	<properties>
-
 		<!-- Generic properties -->
 		<java.version>1.8</java.version>
 		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
@@ -14,7 +14,10 @@
 
 		<!-- Spring -->
 		<spring-framework.version>4.0.3.RELEASE</spring-framework.version>
-
+		<spring.security.version>4.0.2.RELEASE</spring.security.version>
+		<servlet.api.version>3.1.0</servlet.api.version>
+		<jsp.api.version>2.2</jsp.api.version>
+		<jstl.version>1.2</jstl.version>
 		<!-- Hibernate / JPA -->
 		<!-- <hibernate.version>4.3.5.Final</hibernate.version> -->
 		<hibernate.version>5.2.5.Final</hibernate.version>
@@ -22,9 +25,35 @@
 		<!-- Logging -->
 		<logback.version>1.0.13</logback.version>
 		<slf4j.version>1.7.5</slf4j.version>
-
 	</properties>
 
+	<build>
+		<finalName>cars-rent</finalName>
+		<resources>
+			<resource>
+				<directory>src/main/resources</directory>
+			</resource>
+		</resources>
+		<plugins>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-compiler-plugin</artifactId>
+				<version>3.1</version>
+				<configuration>
+					<source>${java.version}</source>
+					<target>${java.version}</target>
+				</configuration>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-war-plugin</artifactId>
+				<configuration>
+					<failOnMissingWebXml>false</failOnMissingWebXml>
+				</configuration>
+			</plugin>
+		</plugins>
+	</build>
+
 	<dependencies>
 		<!-- Spring and Transactions -->
 		<dependency>
@@ -77,11 +106,6 @@
 		</dependency>
 
 		<dependency>
-			<groupId>mysql</groupId>
-			<artifactId>mysql-connector-java</artifactId>
-			<version>5.1.9</version>
-		</dependency>
-		<dependency>
 			<groupId>commons-dbcp</groupId>
 			<artifactId>commons-dbcp</artifactId>
 			<version>1.4</version>
@@ -92,5 +116,43 @@
 			<version>1.12.4</version>
 			<scope>provided</scope>
 		</dependency>
+
+
+		<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-web</artifactId>
+			<version>${spring-framework.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-webmvc</artifactId>
+			<version>${spring-framework.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-web</artifactId>
+			<version>${spring.security.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-config</artifactId>
+			<version>${spring.security.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>javax.servlet</groupId>
+			<artifactId>javax.servlet-api</artifactId>
+			<version>${servlet.api.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>javax.servlet.jsp</groupId>
+			<artifactId>jsp-api</artifactId>
+			<version>${jsp.api.version}</version>
+		</dependency>
+		<dependency>
+			<groupId>jstl</groupId>
+			<artifactId>jstl</artifactId>
+			<version>${jstl.version}</version>
+		</dependency>
+
 	</dependencies>
 </project>
diff --git a/src/main/java/com/courses/WEB-INF/homePage.jsp b/src/main/java/com/courses/WEB-INF/homePage.jsp
new file mode 100644
index 0000000..68f3453
--- /dev/null
+++ b/src/main/java/com/courses/WEB-INF/homePage.jsp
@@ -0,0 +1,16 @@
+<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
+<h3>Welcome to JournalDEV Tutorials</h3>
+<ul>
+    <li>Java 8 tutorial</li>
+    <li>Spring tutorial</li>
+    <li>Gradle tutorial</li>
+    <li>BigData tutorial</li>
+</ul>
+
+<c:url value="/logout" var="logoutUrl" />
+<form id="logout" action="${logoutUrl}" method="post" >
+    <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
+</form>
+<c:if test="${pageContext.request.userPrincipal.name != null}">
+    <a href="javascript:document.getElementById('logout').submit()">Logout</a>
+</c:if>
\ No newline at end of file
diff --git a/src/main/java/com/courses/WEB-INF/loginPage.jsp b/src/main/java/com/courses/WEB-INF/loginPage.jsp
new file mode 100644
index 0000000..c629381
--- /dev/null
+++ b/src/main/java/com/courses/WEB-INF/loginPage.jsp
@@ -0,0 +1,26 @@
+<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
+<html>
+<body onload='document.loginForm.username.focus();'>
+<h3>JournalDEV Tutorials</h3>
+
+<c:if test="${not empty error}"><div>${error}</div></c:if>
+<c:if test="${not empty message}"><div>${message}</div></c:if>
+
+<form name='login' action="<c:url value='loginPage' />" method='POST'>
+    <table>
+        <tr>
+            <td>UserName:</td>
+            <td><input type='text' name='username' value=''></td>
+        </tr>
+        <tr>
+            <td>Password:</td>
+            <td><input type='password' name='password' /></td>
+        </tr>
+        <tr>
+            <td colspan='2'><input name="submit" type="submit" value="submit" /></td>
+        </tr>
+    </table>
+    <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
+</form>
+</body>
+</html>
\ No newline at end of file
diff --git a/src/main/java/com/courses/WEB-INF/welcomePage.jsp b/src/main/java/com/courses/WEB-INF/welcomePage.jsp
new file mode 100644
index 0000000..143498c
--- /dev/null
+++ b/src/main/java/com/courses/WEB-INF/welcomePage.jsp
@@ -0,0 +1,2 @@
+<h3>Welcome to JournalDEV Tutorials</h3>
+<a href="${pageContext.request.contextPath}/loginPage">Login to Journal</a>
\ No newline at end of file
diff --git a/src/main/java/com/courses/web/LoginController.java b/src/main/java/com/courses/web/LoginController.java
new file mode 100644
index 0000000..4a0cdde
--- /dev/null
+++ b/src/main/java/com/courses/web/LoginController.java
@@ -0,0 +1,46 @@
+package com.courses.web;
+
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.servlet.ModelAndView;
+
+/**
+ * @author Stepan.Kachan
+ */
+@Controller
+public class LoginController {
+
+    @RequestMapping(value = {"/"}, method = RequestMethod.GET)
+    public ModelAndView welcomePage() {
+        ModelAndView model = new ModelAndView();
+        model.setViewName("/welcomePage");
+        return model;
+    }
+
+    @RequestMapping(value = { "/homePage"}, method = RequestMethod.GET)
+    public ModelAndView homePage() {
+        ModelAndView model = new ModelAndView();
+        model.setViewName("homePage");
+        return model;
+    }
+
+    @RequestMapping(value = "/loginPage", method = RequestMethod.GET)
+    public ModelAndView loginPage(@RequestParam(value = "error",required = false) String error,
+                                  @RequestParam(value = "logout",	required = false) String logout) {
+
+        ModelAndView model = new ModelAndView();
+        if (error != null) {
+            model.addObject("error", "Invalid Credentials provided.");
+        }
+
+        if (logout != null) {
+            model.addObject("message", "Logged out from JournalDEV successfully.");
+        }
+
+        model.setViewName("loginPage");
+        return model;
+    }
+
+}
diff --git a/src/main/java/com/courses/web/security/LoginApplicationConfig.java b/src/main/java/com/courses/web/security/LoginApplicationConfig.java
new file mode 100644
index 0000000..218da5b
--- /dev/null
+++ b/src/main/java/com/courses/web/security/LoginApplicationConfig.java
@@ -0,0 +1,28 @@
+package com.courses.web.security;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.ComponentScan;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Import;
+import org.springframework.web.servlet.config.annotation.EnableWebMvc;
+import org.springframework.web.servlet.view.InternalResourceViewResolver;
+import org.springframework.web.servlet.view.JstlView;
+
+/**
+ * @author Stepan.Kachan
+ */
+@EnableWebMvc
+@Configuration
+@ComponentScan({"com.courses.*" })
+@Import(value = { LoginSecurityConfig.class })
+public class LoginApplicationConfig {
+    @Bean
+    public InternalResourceViewResolver viewResolver() {
+        InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
+        viewResolver.setViewClass(JstlView.class);
+        viewResolver.setPrefix("/WEB-INF/");
+        viewResolver.setSuffix(".jsp");
+        return viewResolver;
+    }
+
+}
\ No newline at end of file
diff --git a/src/main/java/com/courses/web/security/LoginSecurityConfig.java b/src/main/java/com/courses/web/security/LoginSecurityConfig.java
new file mode 100644
index 0000000..fa5c35c
--- /dev/null
+++ b/src/main/java/com/courses/web/security/LoginSecurityConfig.java
@@ -0,0 +1,38 @@
+package com.courses.web.security;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
+
+/**
+ * @author Stepan.Kachan
+ */
+@Configuration
+@EnableWebSecurity
+public class LoginSecurityConfig extends WebSecurityConfigurerAdapter {
+
+    @Autowired
+    public void configureGlobal(AuthenticationManagerBuilder authenticationMgr) throws Exception {
+        authenticationMgr.inMemoryAuthentication()
+                .withUser("journaldev")
+                .password("jd@123")
+                .authorities("ROLE_USER");
+    }
+
+    @Override
+    protected void configure(HttpSecurity http) throws Exception {
+        http.authorizeRequests()
+                .antMatchers("/homePage").access("hasRole('ROLE_USER')")
+                .and()
+                .formLogin().loginPage("/loginPage")
+                .defaultSuccessUrl("/homePage")
+                .failureUrl("/loginPage?error")
+                .usernameParameter("username").passwordParameter("password")
+                .and()
+                .logout().logoutSuccessUrl("/loginPage?logout");
+
+    }
+}
\ No newline at end of file
diff --git a/src/main/java/com/courses/web/security/SpringMVCWebAppInitializer.java b/src/main/java/com/courses/web/security/SpringMVCWebAppInitializer.java
new file mode 100644
index 0000000..9c0952d
--- /dev/null
+++ b/src/main/java/com/courses/web/security/SpringMVCWebAppInitializer.java
@@ -0,0 +1,25 @@
+package com.courses.web.security;
+
+import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;
+
+/**
+ * @author Stepan.Kachan
+ */
+public class SpringMVCWebAppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {
+
+    @Override
+    protected Class<?>[] getRootConfigClasses() {
+        return new Class[] { LoginApplicationConfig.class };
+    }
+
+    @Override
+    protected Class<?>[] getServletConfigClasses() {
+        return null;
+    }
+
+    @Override
+    protected String[] getServletMappings() {
+        return new String[] { "/" };
+    }
+
+}
\ No newline at end of file
diff --git a/src/main/java/com/courses/web/security/SpringSecurityInitializer.java b/src/main/java/com/courses/web/security/SpringSecurityInitializer.java
new file mode 100644
index 0000000..3497ce7
--- /dev/null
+++ b/src/main/java/com/courses/web/security/SpringSecurityInitializer.java
@@ -0,0 +1,9 @@
+package com.courses.web.security;
+
+import org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer;
+
+/**
+ * @author Stepan.Kachan
+ */
+public class SpringSecurityInitializer extends AbstractSecurityWebApplicationInitializer {
+}
diff --git a/src/main/resources/WEB-INF/homePage.jsp b/src/main/resources/WEB-INF/homePage.jsp
new file mode 100644
index 0000000..68f3453
--- /dev/null
+++ b/src/main/resources/WEB-INF/homePage.jsp
@@ -0,0 +1,16 @@
+<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
+<h3>Welcome to JournalDEV Tutorials</h3>
+<ul>
+    <li>Java 8 tutorial</li>
+    <li>Spring tutorial</li>
+    <li>Gradle tutorial</li>
+    <li>BigData tutorial</li>
+</ul>
+
+<c:url value="/logout" var="logoutUrl" />
+<form id="logout" action="${logoutUrl}" method="post" >
+    <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
+</form>
+<c:if test="${pageContext.request.userPrincipal.name != null}">
+    <a href="javascript:document.getElementById('logout').submit()">Logout</a>
+</c:if>
\ No newline at end of file
diff --git a/src/main/resources/WEB-INF/loginPage.jsp b/src/main/resources/WEB-INF/loginPage.jsp
new file mode 100644
index 0000000..c629381
--- /dev/null
+++ b/src/main/resources/WEB-INF/loginPage.jsp
@@ -0,0 +1,26 @@
+<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
+<html>
+<body onload='document.loginForm.username.focus();'>
+<h3>JournalDEV Tutorials</h3>
+
+<c:if test="${not empty error}"><div>${error}</div></c:if>
+<c:if test="${not empty message}"><div>${message}</div></c:if>
+
+<form name='login' action="<c:url value='loginPage' />" method='POST'>
+    <table>
+        <tr>
+            <td>UserName:</td>
+            <td><input type='text' name='username' value=''></td>
+        </tr>
+        <tr>
+            <td>Password:</td>
+            <td><input type='password' name='password' /></td>
+        </tr>
+        <tr>
+            <td colspan='2'><input name="submit" type="submit" value="submit" /></td>
+        </tr>
+    </table>
+    <input type="hidden" name="${_csrf.parameterName}" value="${_csrf.token}" />
+</form>
+</body>
+</html>
\ No newline at end of file
diff --git a/src/main/resources/WEB-INF/welcomePage.jsp b/src/main/resources/WEB-INF/welcomePage.jsp
new file mode 100644
index 0000000..143498c
--- /dev/null
+++ b/src/main/resources/WEB-INF/welcomePage.jsp
@@ -0,0 +1,2 @@
+<h3>Welcome to JournalDEV Tutorials</h3>
+<a href="${pageContext.request.contextPath}/loginPage">Login to Journal</a>
\ No newline at end of file
diff --git a/src/main/resources/spring-security.xml b/src/main/resources/spring-security.xml
new file mode 100644
index 0000000..6d243d2
--- /dev/null
+++ b/src/main/resources/spring-security.xml
@@ -0,0 +1,30 @@
+<beans:beans xmlns="http://www.springframework.org/schema/security"
+             xmlns:beans="http://www.springframework.org/schema/beans"
+             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+             xsi:schemaLocation="http://www.springframework.org/schema/beans
+	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
+	http://www.springframework.org/schema/security
+	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
+
+    <http auto-config="true">
+        <intercept-url pattern="/admin**" access="ROLE_USER" />
+        <form-login
+                login-page="/login"
+                default-target-url="/welcome"
+                authentication-failure-url="/login?error"
+                username-parameter="username"
+                password-parameter="password" />
+        <logout logout-success-url="/login?logout" />
+        <!-- enable csrf protection -->
+        <csrf/>
+    </http>
+
+    <authentication-manager>
+        <authentication-provider>
+            <user-service>
+                <user name="mkyong" password="123456" authorities="ROLE_USER" />
+            </user-service>
+        </authentication-provider>
+    </authentication-manager>
+
+</beans:beans>
\ No newline at end of file
-- 
2.10.2.windows.1

